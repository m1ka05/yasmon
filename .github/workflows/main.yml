---
name: "ci"

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
    - uses: actions/checkout@v2
    - name: Set up python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Run unit tests and coverage
      env:
        YASMON_SMTP_HOST: ${{ secrets.YASMON_SMTP_HOST }}
        YASMON_SMTP_LOGIN: ${{ secrets.YASMON_SMTP_LOGIN }}
        YASMON_SMTP_PASSOWRD: ${{ secrets.YASMON_SMTP_PASSWORD }}
        YASMON_POP3_HOST: ${{ secrets.YASMON_POP3_HOST }}
      run: |
        sudo apt-get update && sudo apt-get -y install \
          build-essential \
          libsystemd-dev
        pip install --upgrade pip
        pip install -r tests/requirements.txt
        make init
        python -m coverage run --omit="*/test*" -m unittest -b
        python -m coverage report --omit="*/test*"
        python -m coverage html --omit="*/test*"
        coverage-badge -o htmlcov/coverage.svg
    - uses: actions/upload-artifact@v1
      with:
        name: coverage_page
        path: htmlcov/
  docs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
    - uses: actions/checkout@v2
    - name: Set up python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Build documentation
      run: |
        sudo apt-get update && sudo apt-get -y install \
          build-essential \
          libsystemd-dev
        pip install --upgrade pip
        pip install -r docs/requirements.txt
        make init
        cd docs/ && make clean; make html
        pip show sphinx-rtd-theme
        python -m pybadges --left-text=docs --right-text=latest > build/html/docs.svg
    - uses: actions/upload-artifact@v1
      with:
        name: docs_page
        path: docs/build/html/
  
  deploy:
    runs-on: ubuntu-latest
    needs: [tests, docs]
    environment:
      name: github-pages
      url: ${{steps.deployment.outputs.page_url}}
    steps:
    - uses: actions/download-artifact@master
      with:
        name: docs_page
        path: .
    - uses: actions/download-artifact@master
      with:
        name: coverage_page
        path: coverage/
    - uses: actions/configure-pages@v3
    - uses: actions/upload-pages-artifact@v1
      with:
        path: .
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@main
      
